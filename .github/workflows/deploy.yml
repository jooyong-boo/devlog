name: Deploy to Amazon ECR

on:
    push:
        branches: ["main"]

env:
    AWS_REGION: ap-northeast-2
    ECR_REPOSITORY: devlog
    IMAGE_TAG: ${{ github.sha }}

jobs:
    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        environment: production

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build, tag, and push image to Amazon ECR
              id: build-image
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              run: |
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                  echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
            - name: Deploy to EC2
              env:
                  PRIVATE_KEY: ${{ secrets.EC2_KEY }}
                  HOST: ${{ secrets.EC2_HOST }}
                  USER: ubuntu
              run: |
                  echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
                  ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} '
                    aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
                    docker pull ${{ steps.build-image.outputs.image }}
                    docker stop nextjs-app || true
                    docker rm nextjs-app || true
                    docker run -d --name nextjs-app -p 80:3000 ${{ steps.build-image.outputs.image }}
                  '
